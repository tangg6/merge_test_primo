{"ast":null,"code":"export function merge(collection1, collection2) {\n  const merged = [];\n  let i = 0;\n  let j = 0;\n  while (i < collection1.length && j < collection2.length) {\n    if (collection1[i] < collection2[j]) {\n      merged.push(collection1[i]);\n      i++;\n    } else {\n      merged.push(collection2[j]);\n      j++;\n    }\n  }\n  while (i < collection1.length) {\n    merged.push(collection1[i]);\n    i++;\n  }\n  while (j < collection2.length) {\n    merged.push(collection2[j]);\n    j++;\n  }\n  return merged;\n}","map":{"version":3,"names":["merge","collection1","collection2","merged","i","j","length","push"],"sources":["/Users/lzt/Documents/merge_test_primo/src/utils/merge.ts"],"sourcesContent":["export function merge(collection1: number[], collection2: number[]): number[] {\n    const merged: number[] = [];\n    let i = 0;\n    let j = 0;\n  \n    while (i < collection1.length && j < collection2.length) {\n      if (collection1[i] < collection2[j]) {\n        merged.push(collection1[i]);\n        i++;\n      } else {\n        merged.push(collection2[j]);\n        j++;\n      }\n    }\n  \n    while (i < collection1.length) {\n      merged.push(collection1[i]);\n      i++;\n    }\n  \n    while (j < collection2.length) {\n      merged.push(collection2[j]);\n      j++;\n    }\n  \n    return merged;\n  }\n  "],"mappings":"AAAA,OAAO,SAASA,KAAKA,CAACC,WAAqB,EAAEC,WAAqB,EAAY;EAC1E,MAAMC,MAAgB,GAAG,EAAE;EAC3B,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EAET,OAAOD,CAAC,GAAGH,WAAW,CAACK,MAAM,IAAID,CAAC,GAAGH,WAAW,CAACI,MAAM,EAAE;IACvD,IAAIL,WAAW,CAACG,CAAC,CAAC,GAAGF,WAAW,CAACG,CAAC,CAAC,EAAE;MACnCF,MAAM,CAACI,IAAI,CAACN,WAAW,CAACG,CAAC,CAAC,CAAC;MAC3BA,CAAC,EAAE;IACL,CAAC,MAAM;MACLD,MAAM,CAACI,IAAI,CAACL,WAAW,CAACG,CAAC,CAAC,CAAC;MAC3BA,CAAC,EAAE;IACL;EACF;EAEA,OAAOD,CAAC,GAAGH,WAAW,CAACK,MAAM,EAAE;IAC7BH,MAAM,CAACI,IAAI,CAACN,WAAW,CAACG,CAAC,CAAC,CAAC;IAC3BA,CAAC,EAAE;EACL;EAEA,OAAOC,CAAC,GAAGH,WAAW,CAACI,MAAM,EAAE;IAC7BH,MAAM,CAACI,IAAI,CAACL,WAAW,CAACG,CAAC,CAAC,CAAC;IAC3BA,CAAC,EAAE;EACL;EAEA,OAAOF,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}